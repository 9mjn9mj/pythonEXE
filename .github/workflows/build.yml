name: Build and Release Python EXE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller PyQt5

      - name: Build EXE
        run: |
          pyinstaller --onefile --windowed main.py

      - name: Upload EXE as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: dist/main.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download EXE Artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: dist

      - name: Get Latest Tag
        id: get_tag
        run: |
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then
            new_tag="v1.0.0"
          else
            new_tag=$(echo $latest_tag | awk -F. -v OFS=. '{$NF += 1 ; print}')
          fi
          echo "NEW_TAG=$new_tag" >> $GITHUB_ENV

      - name: Create New Tag
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          files: dist/main.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
